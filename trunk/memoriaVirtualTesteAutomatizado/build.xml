<?xml version="1.0" ?>
<project basedir="." default="testes" name="memoriaVirtualTesteAutomatizado">

	<property environment="env"/>
    <property name="ECLIPSE_HOME" value="../../../../dev/eclipse/"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
    <property name="junit.output.dir" value="junit"/>

	<path id="memoriaVirtualTesteAutomatizado.classpath">
        <pathelement location="bin"/>
        <pathelement location="lib/seleniumjars/selenium-server-standalone-3.141.59.jar"/>
        <pathelement location="lib/junit.jar"/>
    	<pathelement location="lib/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
	</path>
    
	<target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    
	<target name="clean">
        <delete dir="bin"/>
    </target>
    
	<target depends="clean" name="cleanall"/>
    
	<target depends="build-subprojects,build-project" name="build"/>
    
	<target name="build-subprojects"/>
    
	<target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="memoriaVirtualTesteAutomatizado.classpath"/>
        </javac>
    </target>
    
	<target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    
	<target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    
	<target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    
	<target name="testes" depends="build">
        <java classname="test.TestesAutomatizados" failonerror="true" fork="yes">
            <classpath refid="memoriaVirtualTesteAutomatizado.classpath"/>
        </java>
    </target>

     <target name="TesteLogoff">
		<mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="test.TesteLogoff" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="memoriaVirtualTesteAutomatizado.classpath"/>
        </junit>
    </target>


    <target name="TesteLogin">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="test.TesteLogin" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="memoriaVirtualTesteAutomatizado.classpath"/>
        </junit>
    </target>
	
	<target name="TesteCadastrarInstituicao">
	        <mkdir dir="${junit.output.dir}"/>
	        <junit fork="yes" printsummary="withOutAndErr">
	            <formatter type="xml"/>
	            <test name="test.TesteCadastrarInstituicao" todir="${junit.output.dir}"/>
	            <jvmarg line="-ea"/>
	            <classpath refid="memoriaVirtualTesteAutomatizado.classpath"/>
	        </junit>
	    </target>
    
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
